@model Encontros.ViewModels.EncontroFormViewModel
@{
    ViewBag.Title = Model.Title;
}

<h2>@Model.Title</h2>



<!--<label>Local</label>
<div class="tt-container">
    <input id="local" name="local" data-rule-validLocal="true" required type="text" value="" class="form-control" />
</div>-->

@using (Html.BeginForm("Save", "Encontros"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.NomeEncontro)
        @Html.TextBoxFor(m => m.NomeEncontro, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NomeEncontro)
    </div>
        <!--  <div class="form-group">
              Html.LabelFor(m => m.LocalId)
              <div class="tt-container">
                  //Html.TextBoxFor(m => m.LocalId, new { class = "form-control" })
              </div>
          </div>-->
        <div class="form-group">
            <label>Local</label>
            <div class="tt-container">
                @Html.TextBoxFor(m => m.LocalNome, new { @class = "form-control"})
            </div>
            @Html.ValidationMessageFor(m => m.LocalNome)
            @Html.ValidationMessageFor(m => m.LocalId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DataDoEncontro)
            @Html.TextBoxFor(m => m.DataDoEncontro, "{0:dd/MM/yyyy}", new { @class = "form-control"})
            @Html.ValidationMessageFor(m => m.DataDoEncontro)
        </div>
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.LocalId)
        <button type="submit" class="btn btn-primary">Salvar</button>

        if (Model.Id != 0)
        {
            <button type="button" id="excluir" class="btn btn-primary">Excluir</button>
        }

}





@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datepicker")

    <script>

        $(document).ready(function () {
            
            $('#DataDoEncontro').datepicker({
                todayBtn: "linked",
                language: "pt-BR",
                autoclose: true,
                orientation: "bottom auto",
                format: "dd/mm/yyyy",
                todayHighlight: true
            });


            var locais = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('nome'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: '/api/locais',
                remote: {
                    url: '/api/locais?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#LocalNome').typeahead({
                minLength: 2,
                highlight: true
            }, {
                    name: 'locais',
                    display: 'nome',
                    source: locais
                }).on("typeahead:select", function (e, local) {
                    console.log(local)
                    $('#LocalId').val(local.id);
                });


            $("#excluir").on("click", function () {
                var id = $("#Id");

                bootbox.confirm("Você tem certeza que deseja excluir este encontro?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/encontros/" + id.attr("value"),
                            method: "DELETE",
                            success: function () {
                                window.location.replace("/Encontros")
                            },
                            error: function () {
                                toastr.error("Erro ao remover o Encontro")
                            }

                        });

                    }
                });
            });

        });
    </script>

}